{"version":3,"sources":["services/persons.js","components/Person.js","components/Agenda.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","person","post","id","url","put","delete","Person","name","number","type","value","onClick","event","confirm","console","log","personServices","Agenda","persons","map","Notification","message","className","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","notificationMessage","setNotificationMessage","filterName","setFilterName","showNotification","setTimeout","getPersons","filter","personService","query","undefined","el","toLowerCase","indexOf","filterPersonsArray","useEffect","catch","error","alert","AddNewPerson","concat","UpdatePerson","p","onChange","target","newFilter","onSubmit","preventDefault","newPerson","busquedaPersona","find","updatePerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e1fdc2cf.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAllPersons = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst savePerson = (person) => {\r\n    const request = axios.post(baseUrl, person)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst updatePerson = (id, person) => {\r\n    const url = `${baseUrl}/${id}`\r\n    const request = axios.put(url, person)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    const url = `${baseUrl}/${id}`\r\n    const request = axios.delete(url)\r\n    return request.then(response => response.data)\r\n}\r\n\r\n\r\nexport default { getAllPersons, savePerson, updatePerson, deletePerson }","import React from 'react'\r\nimport personServices from '../services/persons'\r\n\r\nfunction Person({ person }) {\r\n    const { id, name, number } = person\r\n\r\n    const deletPersonClick = (event) => {\r\n        // eslint-disable-next-line no-restricted-globals\r\n        if (confirm(`Desea borrar el usuario ${name} ${id}`) === true) {\r\n            console.log('Eleigio borrar')\r\n            personServices.deletePerson(id)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <p>\r\n            <label>{name} : {number}</label>\r\n            <input type='button' value=\"Delete\" onClick={deletPersonClick} />\r\n        </p>\r\n\r\n    )\r\n}\r\n\r\nexport default Person\r\n","import React from 'react'\r\nimport Person from './Person'\r\n\r\nfunction Agenda({persons}) {    \r\n\r\n    return (\r\n        <div>\r\n            {persons.map(person => <Person key={person.id} person={person}/>)} \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Agenda\r\n","const Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"success\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Agenda from './components/Agenda'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')  \n  const [notificationMessage, setNotificationMessage] = useState(null)\n  const [filterName, setFilterName] = useState('')\n\n  const showNotification = (message) => {\n    setNotificationMessage(message)\n        setTimeout(() => {\n          setNotificationMessage(null)\n        }, 5000)\n  }\n\n  const getPersons = (filter) =>{\n    personService.getAllPersons()\n    .then(\n      setPersons(filterPersonsArray(filter))\n    )\n  }\n\n\n  useEffect(() => {\n    personService.getAllPersons()\n      .then(data => {setPersons(data) })\n      .catch(error => { alert(`Error al recuperar personas del server: ${error}`) })\n  }, [])\n\n  function filterPersonsArray(query) {\n    if (persons !== undefined) {\n      return persons.filter(function (el) {\n        return el.name.toLowerCase().indexOf(query.toLowerCase()) > -1;\n      })\n    }\n\n    return persons\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n  const handleFilterNameChange = (event) => {        \n    console.log('Value',event.target.value.toLowerCase())\n    const newFilter = event.target.value.toLowerCase()\n    console.log('Antes',filterName)\n    setFilterName(newFilter)        \n    console.log('Despues',filterName)\n    getPersons(newFilter)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    }\n\n    const busquedaPersona = persons.find(person => person.name === newName)\n    if (busquedaPersona !== undefined) {\n      const updatePerson = { ...busquedaPersona, number: newPerson.number }\n      UpdatePerson(updatePerson)\n    }\n    else {\n      AddNewPerson(newPerson)\n    }\n\n    setNewName('')\n    setNewNumber('')\n\n  }\n\n  const AddNewPerson = (person) => {\n    personService.savePerson(person)\n      .then(data => {\n        setPersons(persons.concat(data))\n        showNotification(`Added ${person.name}`)\n      })      \n  }\n\n  const UpdatePerson = (person) => {\n    // eslint-disable-next-line no-restricted-globals\n    if (confirm(`Desea actualizar el telefono de ${person.name}`) === true) {\n\n      personService.updatePerson(person.id, person)\n        .then(data => {\n          setPersons(persons.map(p => p.id !== person.id ? p : data))          \n          showNotification(`Updated ${person.name}`)\n        })\n\n    }\n  }\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={notificationMessage} />\n      <p>Filter  shown with: <input value={filterName} onChange={handleFilterNameChange} /></p>\n      <h3>Add a new</h3>\n      <form onSubmit={addPerson}>\n        <div>\n          name: <input value={newName} onChange={handleNameChange} />\n          <br /><br />\n          number: <input value={newNumber} onChange={handleNumberChange} />\n        </div>\n        <br />\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n      <h3>Numbers</h3>\n      <Agenda persons={persons} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}